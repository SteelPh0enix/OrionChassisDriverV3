syntax = "proto3";
import "nanopb.proto";

// Message IDs reservations:
// 0x01 - 0x1F - generic requests
// 0x20 - 0x3F - generic responses
// 0x40 - 0x4F - motor-related requests
// 0x50 - 0x5F - motor-related responses

message HealthCheck {
  // Header: 0x01
}

message ChassisDirection {
  // Header: 0x40
  int32 power = 1;
  int32 rotation = 2;
}

message Log {
  // Header: 0x20
  enum Type {
    INVALID = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
  }

  Type type = 1;
  string content = 2 [(nanopb).max_length = 200];
}

message ChassisFeedback {
  // Header: 0x50
  message WheelFeedback {
    enum Direction {
      NONE = 0;
      FORWARD = 1;
      BACKWARD = 2;
    }

    int32 current_power = 1;
    int32 target_power = 2;
    float current_draw = 3;
    Direction direction = 4;
    string id = 5 [(nanopb).max_length = 50];
  }

  int32 chassis_power = 1;
  int32 chassis_rotation = 2;
  repeated WheelFeedback wheels = 3 [(nanopb).max_count = 4, (nanopb).fixed_count = true];
}